// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneStore_Website.Data;

#nullable disable

namespace PhoneStore_Website.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    [Migration("20250614005214_migracionGeneral")]
    partial class migracionGeneral
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhoneStore_Website.Models.Abonos", b =>
                {
                    b.Property<int>("Abono_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Abono_Id"));

                    b.Property<decimal>("Abono_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Abono_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Card_Num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sale_Id")
                        .HasColumnType("int");

                    b.Property<int>("empleadoId_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("ventaSale_Id")
                        .HasColumnType("int");

                    b.HasKey("Abono_Id");

                    b.HasIndex("empleadoId_Empleado");

                    b.HasIndex("ventaSale_Id");

                    b.ToTable("Abonos");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Cliente", b =>
                {
                    b.Property<int>("Client_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Client_Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pssword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Client_Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Compra", b =>
                {
                    b.Property<int>("Purchase_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Purchase_Id"));

                    b.Property<string>("Doc_Num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doc_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("Prov_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("empleadoId_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("proveedoresProv_Id")
                        .HasColumnType("int");

                    b.HasKey("Purchase_Id");

                    b.HasIndex("empleadoId_Empleado");

                    b.HasIndex("proveedoresProv_Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Det_Compra", b =>
                {
                    b.Property<int>("Purc_Det_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Purc_Det_Id"));

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<int>("Purchase_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Purchase_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sale_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("compraPurchase_Id")
                        .HasColumnType("int");

                    b.Property<int>("productoProd_Id")
                        .HasColumnType("int");

                    b.HasKey("Purc_Det_Id");

                    b.HasIndex("compraPurchase_Id");

                    b.HasIndex("productoProd_Id");

                    b.ToTable("Det_Compras");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Det_Venta", b =>
                {
                    b.Property<int>("Det_Sale_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Det_Sale_Id"));

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductoProd_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Sale_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Sale_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sucursal_Id")
                        .HasColumnType("int");

                    b.Property<int>("sucursalId_Sucursal")
                        .HasColumnType("int");

                    b.Property<int>("ventaSale_Id")
                        .HasColumnType("int");

                    b.HasKey("Det_Sale_Id");

                    b.HasIndex("ProductoProd_Id");

                    b.HasIndex("sucursalId_Sucursal");

                    b.HasIndex("ventaSale_Id");

                    b.ToTable("Det_Ventas");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Empleado", b =>
                {
                    b.Property<int>("Id_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Empleado"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId_Sucursal")
                        .HasColumnType("int");

                    b.Property<int>("Sucursal_Id")
                        .HasColumnType("int");

                    b.Property<bool>("User_State")
                        .HasColumnType("bit");

                    b.HasKey("Id_Empleado");

                    b.HasIndex("SucursalId_Sucursal");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Estado_Pago", b =>
                {
                    b.Property<int>("Id_Estado_Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Estado_Pago"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Estado_Pago");

                    b.ToTable("Estado_Pagos");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Historial_Actividades", b =>
                {
                    b.Property<int>("Historial_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Historial_Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("Empleado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Historial_Id");

                    b.HasIndex("EmpId_Empleado");

                    b.ToTable("Historial_Actividades");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Marca", b =>
                {
                    b.Property<int>("Id_Marca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Marca"));

                    b.Property<string>("Marca_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Marca_State")
                        .HasColumnType("bit");

                    b.HasKey("Id_Marca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Producto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prod_Id"));

                    b.Property<int>("Id_Marca")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prod_Cod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prod_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prod_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Prod_State")
                        .HasColumnType("bit");

                    b.Property<decimal>("Purchase_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sale_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Prod_Id");

                    b.HasIndex("Id_Marca");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Proveedores", b =>
                {
                    b.Property<int>("Prov_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prov_Id"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prov_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prov_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Prov_State")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Prov_Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Sucursal", b =>
                {
                    b.Property<int>("Id_Sucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Sucursal"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Sucursal");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Tipos_Pago", b =>
                {
                    b.Property<int>("Id_Tipo_Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Tipo_Pago"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Tipo_Pago");

                    b.ToTable("Tipos_Pagos");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Venta", b =>
                {
                    b.Property<int>("Sale_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sale_Id"));

                    b.Property<string>("Card_Num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Change_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Client_Id")
                        .HasColumnType("int");

                    b.Property<int>("ClientesClient_Id")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId_Empleado")
                        .HasColumnType("int");

                    b.Property<int?>("Estado_PagoId_Estado_Pago")
                        .HasColumnType("int");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<decimal>("Pay_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Pay_Type")
                        .HasColumnType("int");

                    b.Property<int>("Sale_Status")
                        .HasColumnType("int");

                    b.Property<int?>("Tipos_PagoId_Tipo_Pago")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Sale_Id");

                    b.HasIndex("ClientesClient_Id");

                    b.HasIndex("EmpleadoId_Empleado");

                    b.HasIndex("Estado_PagoId_Estado_Pago");

                    b.HasIndex("Tipos_PagoId_Tipo_Pago");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Abonos", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Empleado", "empleado")
                        .WithMany("Abonos")
                        .HasForeignKey("empleadoId_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Venta", "venta")
                        .WithMany("Abonos")
                        .HasForeignKey("ventaSale_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empleado");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Compra", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Empleado", "empleado")
                        .WithMany("Compras")
                        .HasForeignKey("empleadoId_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Proveedores", "proveedores")
                        .WithMany("Compras")
                        .HasForeignKey("proveedoresProv_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empleado");

                    b.Navigation("proveedores");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Det_Compra", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Compra", "compra")
                        .WithMany("Det_Compras")
                        .HasForeignKey("compraPurchase_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Producto", "producto")
                        .WithMany("Det_Compras")
                        .HasForeignKey("productoProd_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Det_Venta", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoProd_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Sucursal", "sucursal")
                        .WithMany("Det_Ventas")
                        .HasForeignKey("sucursalId_Sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Venta", "venta")
                        .WithMany("Det_Ventas")
                        .HasForeignKey("ventaSale_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("sucursal");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Empleado", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Sucursal", "Sucursal")
                        .WithMany("Empleados")
                        .HasForeignKey("SucursalId_Sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Historial_Actividades", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Empleado", "Emp")
                        .WithMany("Historial")
                        .HasForeignKey("EmpId_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Producto", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("Id_Marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Venta", b =>
                {
                    b.HasOne("PhoneStore_Website.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesClient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Empleado", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("EmpleadoId_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneStore_Website.Models.Estado_Pago", null)
                        .WithMany("Ventas")
                        .HasForeignKey("Estado_PagoId_Estado_Pago");

                    b.HasOne("PhoneStore_Website.Models.Tipos_Pago", null)
                        .WithMany("Ventas")
                        .HasForeignKey("Tipos_PagoId_Tipo_Pago");

                    b.Navigation("Clientes");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Compra", b =>
                {
                    b.Navigation("Det_Compras");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Empleado", b =>
                {
                    b.Navigation("Abonos");

                    b.Navigation("Compras");

                    b.Navigation("Historial");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Estado_Pago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Producto", b =>
                {
                    b.Navigation("Det_Compras");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Proveedores", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Sucursal", b =>
                {
                    b.Navigation("Det_Ventas");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Tipos_Pago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("PhoneStore_Website.Models.Venta", b =>
                {
                    b.Navigation("Abonos");

                    b.Navigation("Det_Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
